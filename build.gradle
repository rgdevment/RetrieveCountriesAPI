plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "5.0.0.4638"
    id 'com.google.cloud.tools.jib' version '3.4.2'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
}

group = 'cl.tica.portfolio'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'net.datafaker:datafaker:2.2.2'
}

apply from: 'gradle/sonar.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/pmd.gradle'
apply from: 'gradle/populate.gradle'
apply from: 'gradle/jib.gradle'

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

test {
    jvmArgs("-XX:+EnableDynamicAgentLoading", "-Xshare:off")
}
